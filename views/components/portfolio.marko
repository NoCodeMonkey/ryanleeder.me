$ {
  const _ = require('lodash'),
        request = require('request'),
        rp = require('request-promise-native'),
        regexWebUrl = require('regex-weburl'),
        cheerio = require('cheerio'),
        djv = require('djv'),
        fs = require('fs-extra'),
        path = require('path'),
        {get} = require('underscore.get'),
        env = new djv(),
        portfolioJsonSchema = require('../../config/portfolio-schema.json'),
        portfolioJson = require('../../config/portfolio.json');

  async function exists(path) {
    try {
      await fs.stat(path)
    } catch (err) {
      return false
    }
    return true
  }

  async function checkAvailable(portfolio) {
    if (!portfolio.website || !portfolio.website.url) {
      return portfolio;
    }
    var re = new RegExp(regexWebUrl);
    var isValid = re.test(portfolio.website.url);
    if (!isValid) {
      return portfolio;
    }
    var options = {
      uri: portfolio.website.url,
      transform: function (body) {
        return cheerio.load(body);
      }
    };
    try
    {
      const $r = await rp(options);
      const result = (portfolio.website.verification && portfolio.website.verification.length) ? ($r(portfolio.website.verification).length > 0) : true;
      portfolio = _.merge({ website: { available : result } }, portfolio);
    }
    catch(err)
    {}
    return portfolio;
  }

  env.addSchema('portfolio', portfolioJsonSchema);
  const errors = env.validate('portfolio', _.extend(true, {}, portfolioJson));
}
<if(errors && errors.length)>
  <div class="alert alert-warning alert-dismissible fade show" role="alert">
    <strong>An Error Occurred:</strong> portfolio local JSON file failed validation.
    <button type="button" class="hide-js-element close" data-dismiss="alert" aria-label="Close">
      <span aria-hidden="true">&times;</span>
    </button>
  </div>
</if>
<else>
  $ {
    var effects = ['effect1', 'effect2', 'effect3'];
    var portfolioPromise = Promise.all(_.map(portfolioJson, portfolio =>checkAvailable(portfolio)));

    async function getPicture(portfolio) {
      var picture = {
        large: 'img/noimageavailable.png',
        small: 'img/noimageavailable.png'
      };
      var portfolioPath = get(portfolio, 'directory.path', null);
      var portfolioFiles = get(portfolio, 'directory.files', null);
      if (portfolioPath && portfolioFiles && portfolioFiles.length) {
        var directory = portfolioPath.split(path.sep).pop();
        var portfolioUrl = get(portfolio, 'website.url', null);
        if (portfolioUrl && await exists(path.join(__dirname, `../../public/img/portfolio/${directory}/fullsize-1920x1280.png`))) {
          picture.large = `img/portfolio/${directory}/fullsize-1920x1280.png`;
          picture.small = `img/portfolio/${directory}/xsmall-320x214.png`;
        } else if (await exists(path.join(__dirname, `../../public/img/portfolio/${directory}/${files[0]}`))) {
          picture.large = `img/portfolio/${directory}/${files[0]}`;
          picture.small = picture.large;
        }
      }
      return picture;
    }

    async function getSourceSet(portfolio) {
      var portfolioUrl = get(portfolio, 'website.url', null);
      var portfolioPath = get(portfolio, 'directory.path', null);
      var portfolioFiles = get(portfolio, 'directory.files', null);
      if (!portfolioUrl || !portfolioPath || !portfolioFiles || !portfolioFiles.length)
        return null;
      var directory = portfolioPath.split(path.sep).pop();
      var sourceSet = [];
      for (let index = 0; index < portfolioFiles.length; ++index) {
        if (await exists(path.join(portfolioPath, portfolioFiles[index]))) {
          var size = portfolioFiles[index].match(/^\d+|\d+\b|\d+(?=\w)/g).map(function (v) {return +v;});
          sourceSet.push(`img/portfolio/${directory}/${portfolioFiles[index]} ${size[0]}w`)
        }
      }
      return sourceSet.length > 0 ? sourceSet.join(', ') : null;
    }
  }
  <p>Here's a small selection of the projects I've worked on both past and present, for clients ranging from small business to fortune 500 companies.</p>
  <p>Mostly developed in ASP.NET, C#, JQuery and SQL Server. Enhanced with a dash of Windows Azure and Amazon cloud platform development. Finally garnished with a sprinkle of Shopify and WordPress for good measure!</p>
  <await(portfolioItems from portfolioPromise)>
    <div class="gallery">
      <for(portfolio in portfolioItems | status-var=loop)>
        $ var effect = effects[loop.getIndex() % effects.length];
        $ var promises = Promise.all([getPicture(portfolio), getSourceSet(portfolio)]);
        <await(response from promises)>
          $ var picture = response[0];
          $ var pictureSourceSet = response[1];
          <div class="gallery-item hovereffect ${effect}" data-toggle="lightbox" data-remote="${picture.large}" data-gallery="gallery" data-type="image">
            <if(pictureSourceSet)>
              <img class="gallery-img" src="${picture.small}" srcset="${pictureSourceSet}" alt="${portfolio.title}">
            </if>
            <else>
              <img class="gallery-img" src="${picture.small}" alt="${portfolio.title}">
            </else>
            <div class="overlay">
              <h2>${portfolio.title}</h2>
              <div class="links-container">
                <div class="links">
                  <a class="btn btn-primary preview hide-js-element" href="#" title="Preview"><i class="far fa-eye"></i></a>
                  <a class="btn btn-primary info hide-js-element ml-2" href="#" title="View Information" data-title="${portfolio.title}" data-description="${portfolio.description}" data-technologies="${portfolio.technologies.join()}">View Information</a>
                  <a class="btn btn-primary website" target="_blank" title="Visit Website" href="${portfolio.website.url}" if (portfolio.website && portfolio.website.available === true)>Visit Website</a>
                </div>
              </div>
            </div>
          </div>
        </await>
      </for>
    </div>
    <await-error>
      <div class="alert alert-warning alert-dismissible fade show" role="alert">
        <strong>An Error Occurred:</strong> Unable to load portfolio configuration.
        <button type="button" class="hide-js-element close" data-dismiss="alert" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
    </await-error>
    <await-timeout>
      <div class="alert alert-warning alert-dismissible fade show" role="alert">
        <strong>An Error Occurred:</strong> Timed out waiting for portfolio configuration to load.
        <button type="button" class="hide-js-element close" data-dismiss="alert" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
    </await-timeout>
  </await>
  <p class="mt-3">The items above reflect just a small sample of the projects I have worked on. If you are looking for more samples of a specific type, please contact me.</p>
</else>
